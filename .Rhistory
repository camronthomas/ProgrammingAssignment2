## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
cachedInverse <- NULL
set <- function(y) {
x <<- y
cachedInverse <<- NULL
}
get <- function() x
setInverse <- function() cachedInverse
list(set = set, get = get,
setInverse = setInverse,
getInverse = getInverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
invFunc <- x$getInverse()
if(!is.null(invFunc)) {
message("getting cached data")
return(invFunc)
}
data <- x$get()
invFunc <- solve(data, ...)
x$setInverse(invFunc)
}
cacheSolve(6)
cacheSolve(5, 15)
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix()
m = makeCacheMatrix(x)
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
setInverse <- function(inverse) cachedInverse <<- inverse
m = makeCacheMatrix(x)
invFunc
inv
x = rbind(c(1, -1/4), c(-1/4,1))
m = makeCacheMatrix(x)
getInverse=getInverse)
inv <- solve(data, ...)
data <- x$get()
m = makeCacheMatrix(x)
getInverse = getInverse)
}
x
m
m = makeCacheMatrix(x)
